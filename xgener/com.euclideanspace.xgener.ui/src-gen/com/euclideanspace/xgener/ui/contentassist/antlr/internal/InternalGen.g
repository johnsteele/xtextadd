/*
* generated by Xtext
*/
grammar InternalGen;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.euclideanspace.xgener.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.euclideanspace.xgener.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.euclideanspace.xgener.services.GenGrammarAccess;

}

@parser::members {
 
 	private GenGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GenGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)*
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassType
entryRuleClassType 
:
{ before(grammarAccess.getClassTypeRule()); }
	 ruleClassType
{ after(grammarAccess.getClassTypeRule()); } 
	 EOF 
;

// Rule ClassType
ruleClassType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassTypeAccess().getGroup()); }
(rule__ClassType__Group__0)
{ after(grammarAccess.getClassTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedure
entryRuleProcedure 
:
{ before(grammarAccess.getProcedureRule()); }
	 ruleProcedure
{ after(grammarAccess.getProcedureRule()); } 
	 EOF 
;

// Rule Procedure
ruleProcedure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcedureAccess().getGroup()); }
(rule__Procedure__Group__0)
{ after(grammarAccess.getProcedureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getGroup()); }
(rule__Statement__Group__0)
{ after(grammarAccess.getStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultID
entryRuleMultID 
:
{ before(grammarAccess.getMultIDRule()); }
	 ruleMultID
{ after(grammarAccess.getMultIDRule()); } 
	 EOF 
;

// Rule MultID
ruleMultID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultIDAccess().getAlternatives()); }
(rule__MultID__Alternatives)
{ after(grammarAccess.getMultIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultString
entryRuleMultString 
:
{ before(grammarAccess.getMultStringRule()); }
	 ruleMultString
{ after(grammarAccess.getMultStringRule()); } 
	 EOF 
;

// Rule MultString
ruleMultString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultStringAccess().getAlternatives()); }
(rule__MultString__Alternatives)
{ after(grammarAccess.getMultStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getClasAssignment_0()); }
(rule__Model__ClasAssignment_0)
{ after(grammarAccess.getModelAccess().getClasAssignment_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getProcAssignment_1()); }
(rule__Model__ProcAssignment_1)
{ after(grammarAccess.getModelAccess().getProcAssignment_1()); }
)

    |(
{ before(grammarAccess.getModelAccess().getStatemAssignment_2()); }
(rule__Model__StatemAssignment_2)
{ after(grammarAccess.getModelAccess().getStatemAssignment_2()); }
)

    |(
{ before(grammarAccess.getModelAccess().getExpAssignment_3()); }
(rule__Model__ExpAssignment_3)
{ after(grammarAccess.getModelAccess().getExpAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getNoclassAssignment_2_0()); }
(rule__ClassType__NoclassAssignment_2_0)
{ after(grammarAccess.getClassTypeAccess().getNoclassAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getClassTypeAccess().getGroup_2_1()); }
(rule__ClassType__Group_2_1__0)
{ after(grammarAccess.getClassTypeAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getClassTypeAccess().getGroup_2_2()); }
(rule__ClassType__Group_2_2__0)
{ after(grammarAccess.getClassTypeAccess().getGroup_2_2()); }
)

    |(
{ before(grammarAccess.getClassTypeAccess().getGroup_2_3()); }
(rule__ClassType__Group_2_3__0)
{ after(grammarAccess.getClassTypeAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__BlockingAlternatives_2_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getBlockingBracesKeyword_2_3_1_0_0()); }

	'braces' 

{ after(grammarAccess.getClassTypeAccess().getBlockingBracesKeyword_2_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getClassTypeAccess().getBlockingIndentKeyword_2_3_1_0_1()); }

	'indent' 

{ after(grammarAccess.getClassTypeAccess().getBlockingIndentKeyword_2_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_2_0()); }
(rule__Procedure__Group_2_0__0)
{ after(grammarAccess.getProcedureAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getProcedureAccess().getGroup_2_1()); }
(rule__Procedure__Group_2_1__0)
{ after(grammarAccess.getProcedureAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getProcedureAccess().getGroup_2_2()); }
(rule__Procedure__Group_2_2__0)
{ after(grammarAccess.getProcedureAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__TypesAlternatives_2_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getTypesColonSeperatedKeyword_2_2_1_0_0()); }

	'colonSeperated' 

{ after(grammarAccess.getProcedureAccess().getTypesColonSeperatedKeyword_2_2_1_0_0()); }
)

    |(
{ before(grammarAccess.getProcedureAccess().getTypesSpaceSeperatedKeyword_2_2_1_0_1()); }

	'spaceSeperated' 

{ after(grammarAccess.getProcedureAccess().getTypesSpaceSeperatedKeyword_2_2_1_0_1()); }
)

    |(
{ before(grammarAccess.getProcedureAccess().getTypesInHeaderKeyword_2_2_1_0_2()); }

	'inHeader' 

{ after(grammarAccess.getProcedureAccess().getTypesInHeaderKeyword_2_2_1_0_2()); }
)

    |(
{ before(grammarAccess.getProcedureAccess().getTypesInferredKeyword_2_2_1_0_3()); }

	'inferred' 

{ after(grammarAccess.getProcedureAccess().getTypesInferredKeyword_2_2_1_0_3()); }
)

    |(
{ before(grammarAccess.getProcedureAccess().getTypesUntypedKeyword_2_2_1_0_4()); }

	'untyped' 

{ after(grammarAccess.getProcedureAccess().getTypesUntypedKeyword_2_2_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_2_0()); }
(rule__Statement__Group_2_0__0)
{ after(grammarAccess.getStatementAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_2_1()); }
(rule__Statement__Group_2_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_2_2()); }
(rule__Statement__Group_2_2__0)
{ after(grammarAccess.getStatementAccess().getGroup_2_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_2_3()); }
(rule__Statement__Group_2_3__0)
{ after(grammarAccess.getStatementAccess().getGroup_2_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_2_4()); }
(rule__Statement__Group_2_4__0)
{ after(grammarAccess.getStatementAccess().getGroup_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_2_0()); }
(rule__Expression__Group_2_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_2_1()); }
(rule__Expression__Group_2_1__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_2_2()); }
(rule__Expression__Group_2_2__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_2_3()); }
(rule__Expression__Group_2_3__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_2_4()); }
(rule__Expression__Group_2_4__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2_4()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_2_5()); }
(rule__Expression__Group_2_5__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2_5()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_2_6()); }
(rule__Expression__Group_2_6__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2_6()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_2_7()); }
(rule__Expression__Group_2_7__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LiteralAlternatives_2_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLiteralIntKeyword_2_4_1_0_0()); }

	'int' 

{ after(grammarAccess.getExpressionAccess().getLiteralIntKeyword_2_4_1_0_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getLiteralStringKeyword_2_4_1_0_1()); }

	'string' 

{ after(grammarAccess.getExpressionAccess().getLiteralStringKeyword_2_4_1_0_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getLiteralBoolKeyword_2_4_1_0_2()); }

	'bool' 

{ after(grammarAccess.getExpressionAccess().getLiteralBoolKeyword_2_4_1_0_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getLiteralFloatKeyword_2_4_1_0_3()); }

	'float' 

{ after(grammarAccess.getExpressionAccess().getLiteralFloatKeyword_2_4_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getMultIDAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMultIDAccess().getGroup_1()); }
(rule__MultID__Group_1__0)
{ after(grammarAccess.getMultIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getMultStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMultStringAccess().getGroup_1()); }
(rule__MultString__Group_1__0)
{ after(grammarAccess.getMultStringAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ClassType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassType__Group__0__Impl
	rule__ClassType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getClassTypeAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassType__Group__1__Impl
	rule__ClassType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getNameAssignment_1()); }
(rule__ClassType__NameAssignment_1)
{ after(grammarAccess.getClassTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getAlternatives_2()); }
(rule__ClassType__Alternatives_2)*
{ after(grammarAccess.getClassTypeAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassType__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassType__Group_2_1__0__Impl
	rule__ClassType__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getPrefixKeyword_2_1_0()); }

	'prefix' 

{ after(grammarAccess.getClassTypeAccess().getPrefixKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassType__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassType__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getPrefixAssignment_2_1_1()); }
(rule__ClassType__PrefixAssignment_2_1_1)
{ after(grammarAccess.getClassTypeAccess().getPrefixAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassType__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassType__Group_2_2__0__Impl
	rule__ClassType__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getSuffixKeyword_2_2_0()); }

	'suffix' 

{ after(grammarAccess.getClassTypeAccess().getSuffixKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassType__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassType__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getSuffixAssignment_2_2_1()); }
(rule__ClassType__SuffixAssignment_2_2_1)
{ after(grammarAccess.getClassTypeAccess().getSuffixAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassType__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassType__Group_2_3__0__Impl
	rule__ClassType__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getBlockingKeyword_2_3_0()); }

	'blocking' 

{ after(grammarAccess.getClassTypeAccess().getBlockingKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassType__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassType__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getBlockingAssignment_2_3_1()); }
(rule__ClassType__BlockingAssignment_2_3_1)
{ after(grammarAccess.getClassTypeAccess().getBlockingAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__0__Impl
	rule__Procedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getProcedureKeyword_0()); }

	'procedure' 

{ after(grammarAccess.getProcedureAccess().getProcedureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__1__Impl
	rule__Procedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getNameAssignment_1()); }
(rule__Procedure__NameAssignment_1)
{ after(grammarAccess.getProcedureAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getAlternatives_2()); }
(rule__Procedure__Alternatives_2)*
{ after(grammarAccess.getProcedureAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Procedure__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2_0__0__Impl
	rule__Procedure__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getPrefixKeyword_2_0_0()); }

	'prefix' 

{ after(grammarAccess.getProcedureAccess().getPrefixKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getPrefixAssignment_2_0_1()); }
(rule__Procedure__PrefixAssignment_2_0_1)
{ after(grammarAccess.getProcedureAccess().getPrefixAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2_1__0__Impl
	rule__Procedure__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getSuffixKeyword_2_1_0()); }

	'suffix' 

{ after(grammarAccess.getProcedureAccess().getSuffixKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getSuffixAssignment_2_1_1()); }
(rule__Procedure__SuffixAssignment_2_1_1)
{ after(grammarAccess.getProcedureAccess().getSuffixAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2_2__0__Impl
	rule__Procedure__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getTypesKeyword_2_2_0()); }

	'types' 

{ after(grammarAccess.getProcedureAccess().getTypesKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getTypesAssignment_2_2_1()); }
(rule__Procedure__TypesAssignment_2_2_1)
{ after(grammarAccess.getProcedureAccess().getTypesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementKeyword_0()); }

	'statement' 

{ after(grammarAccess.getStatementAccess().getStatementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__1__Impl
	rule__Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameAssignment_1()); }
(rule__Statement__NameAssignment_1)
{ after(grammarAccess.getStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAlternatives_2()); }
(rule__Statement__Alternatives_2)
{ after(grammarAccess.getStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_0__0__Impl
	rule__Statement__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRepeatKeyword_2_0_0()); }

	'repeat' 

{ after(grammarAccess.getStatementAccess().getRepeatKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_0__1__Impl
	rule__Statement__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRepAssignment_2_0_1()); }
(rule__Statement__RepAssignment_2_0_1)
{ after(grammarAccess.getStatementAccess().getRepAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_0__2__Impl
	rule__Statement__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getUntilKeyword_2_0_2()); }

	'until' 

{ after(grammarAccess.getStatementAccess().getUntilKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getUntilAssignment_2_0_3()); }
(rule__Statement__UntilAssignment_2_0_3)
{ after(grammarAccess.getStatementAccess().getUntilAssignment_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_1__0__Impl
	rule__Statement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhileKeyword_2_1_0()); }

	'while' 

{ after(grammarAccess.getStatementAccess().getWhileKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_1__1__Impl
	rule__Statement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhileAssignment_2_1_1()); }
(rule__Statement__WhileAssignment_2_1_1)
{ after(grammarAccess.getStatementAccess().getWhileAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_1__2__Impl
	rule__Statement__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDoKeyword_2_1_2()); }

	'do' 

{ after(grammarAccess.getStatementAccess().getDoKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDoAssignment_2_1_3()); }
(rule__Statement__DoAssignment_2_1_3)
{ after(grammarAccess.getStatementAccess().getDoAssignment_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_2__0__Impl
	rule__Statement__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getForKeyword_2_2_0()); }

	'for' 

{ after(grammarAccess.getStatementAccess().getForKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getForAssignment_2_2_1()); }
(rule__Statement__ForAssignment_2_2_1)
{ after(grammarAccess.getStatementAccess().getForAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_3__0__Impl
	rule__Statement__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVarKeyword_2_3_0()); }

	'var' 

{ after(grammarAccess.getStatementAccess().getVarKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_3__1__Impl
	rule__Statement__Group_2_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVarAssignment_2_3_1()); }
(rule__Statement__VarAssignment_2_3_1)
{ after(grammarAccess.getStatementAccess().getVarAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_2_3_2()); }
(rule__Statement__Group_2_3_2__0)?
{ after(grammarAccess.getStatementAccess().getGroup_2_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_2_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_3_2__0__Impl
	rule__Statement__Group_2_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getEqualsSignKeyword_2_3_2_0()); }

	'=' 

{ after(grammarAccess.getStatementAccess().getEqualsSignKeyword_2_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExAssignment_2_3_2_1()); }
(rule__Statement__ExAssignment_2_3_2_1)
{ after(grammarAccess.getStatementAccess().getExAssignment_2_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_4__0__Impl
	rule__Statement__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getValKeyword_2_4_0()); }

	'val' 

{ after(grammarAccess.getStatementAccess().getValKeyword_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_4__1__Impl
	rule__Statement__Group_2_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getValAssignment_2_4_1()); }
(rule__Statement__ValAssignment_2_4_1)
{ after(grammarAccess.getStatementAccess().getValAssignment_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_4__2__Impl
	rule__Statement__Group_2_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getEqualsSignKeyword_2_4_2()); }

	'=' 

{ after(grammarAccess.getStatementAccess().getEqualsSignKeyword_2_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExAssignment_2_4_3()); }
(rule__Statement__ExAssignment_2_4_3)
{ after(grammarAccess.getStatementAccess().getExAssignment_2_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionKeyword_0()); }

	'expression' 

{ after(grammarAccess.getExpressionAccess().getExpressionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
	rule__Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNameAssignment_1()); }
(rule__Expression__NameAssignment_1)
{ after(grammarAccess.getExpressionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_2()); }
(rule__Expression__Alternatives_2)*
{ after(grammarAccess.getExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_0__0__Impl
	rule__Expression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPrefixKeyword_2_0_0()); }

	'prefix' 

{ after(grammarAccess.getExpressionAccess().getPrefixKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_0__1__Impl
	rule__Expression__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPrefixAssignment_2_0_1()); }
(rule__Expression__PrefixAssignment_2_0_1)
{ after(grammarAccess.getExpressionAccess().getPrefixAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar1Assignment_2_0_2()); }
(rule__Expression__Par1Assignment_2_0_2)
{ after(grammarAccess.getExpressionAccess().getPar1Assignment_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_1__0__Impl
	rule__Expression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSuffixKeyword_2_1_0()); }

	'suffix' 

{ after(grammarAccess.getExpressionAccess().getSuffixKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_1__1__Impl
	rule__Expression__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar1Assignment_2_1_1()); }
(rule__Expression__Par1Assignment_2_1_1)
{ after(grammarAccess.getExpressionAccess().getPar1Assignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSuffixAssignment_2_1_2()); }
(rule__Expression__SuffixAssignment_2_1_2)
{ after(grammarAccess.getExpressionAccess().getSuffixAssignment_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_2__0__Impl
	rule__Expression__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getInfixKeyword_2_2_0()); }

	'infix' 

{ after(grammarAccess.getExpressionAccess().getInfixKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_2__1__Impl
	rule__Expression__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar1Assignment_2_2_1()); }
(rule__Expression__Par1Assignment_2_2_1)
{ after(grammarAccess.getExpressionAccess().getPar1Assignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_2__2__Impl
	rule__Expression__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getInfixAssignment_2_2_2()); }
(rule__Expression__InfixAssignment_2_2_2)
{ after(grammarAccess.getExpressionAccess().getInfixAssignment_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar2Assignment_2_2_3()); }
(rule__Expression__Par2Assignment_2_2_3)
{ after(grammarAccess.getExpressionAccess().getPar2Assignment_2_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_3__0__Impl
	rule__Expression__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getInfixleftKeyword_2_3_0()); }

	'infixleft' 

{ after(grammarAccess.getExpressionAccess().getInfixleftKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_3__1__Impl
	rule__Expression__Group_2_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar1Assignment_2_3_1()); }
(rule__Expression__Par1Assignment_2_3_1)
{ after(grammarAccess.getExpressionAccess().getPar1Assignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_3__2__Impl
	rule__Expression__Group_2_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getInfixleftAssignment_2_3_2()); }
(rule__Expression__InfixleftAssignment_2_3_2)
{ after(grammarAccess.getExpressionAccess().getInfixleftAssignment_2_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar2Assignment_2_3_3()); }
(rule__Expression__Par2Assignment_2_3_3)
{ after(grammarAccess.getExpressionAccess().getPar2Assignment_2_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_4__0__Impl
	rule__Expression__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLiteralKeyword_2_4_0()); }

	'literal' 

{ after(grammarAccess.getExpressionAccess().getLiteralKeyword_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLiteralAssignment_2_4_1()); }
(rule__Expression__LiteralAssignment_2_4_1)
{ after(grammarAccess.getExpressionAccess().getLiteralAssignment_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_2_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_5__0__Impl
	rule__Expression__Group_2_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBracketKeyword_2_5_0()); }

	'bracket' 

{ after(grammarAccess.getExpressionAccess().getBracketKeyword_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBracketAssignment_2_5_1()); }
(rule__Expression__BracketAssignment_2_5_1)
{ after(grammarAccess.getExpressionAccess().getBracketAssignment_2_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_2_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_6__0__Impl
	rule__Expression__Group_2_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBracesKeyword_2_6_0()); }

	'braces' 

{ after(grammarAccess.getExpressionAccess().getBracesKeyword_2_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBracesAssignment_2_6_1()); }
(rule__Expression__BracesAssignment_2_6_1)
{ after(grammarAccess.getExpressionAccess().getBracesAssignment_2_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_2_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_7__0__Impl
	rule__Expression__Group_2_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getParenthasisKeyword_2_7_0()); }

	'parenthasis' 

{ after(grammarAccess.getExpressionAccess().getParenthasisKeyword_2_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getParenthasisAssignment_2_7_1()); }
(rule__Expression__ParenthasisAssignment_2_7_1)
{ after(grammarAccess.getExpressionAccess().getParenthasisAssignment_2_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultID__Group_1__0__Impl
	rule__MultID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultIDAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getMultIDAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultID__Group_1__1__Impl
	rule__MultID__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultIDAccess().getIDTerminalRuleCall_1_1()); }
(	RULE_ID)*
{ after(grammarAccess.getMultIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultID__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultID__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultID__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultIDAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getMultIDAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultString__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultString__Group_1__0__Impl
	rule__MultString__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultString__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultStringAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getMultStringAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultString__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultString__Group_1__1__Impl
	rule__MultString__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultString__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultStringAccess().getSTRINGTerminalRuleCall_1_1()); }
(	RULE_STRING)*
{ after(grammarAccess.getMultStringAccess().getSTRINGTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultString__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultString__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultString__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultStringAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getMultStringAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__ClasAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getClasClassTypeParserRuleCall_0_0()); }
	ruleClassType{ after(grammarAccess.getModelAccess().getClasClassTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ProcAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getProcProcedureParserRuleCall_1_0()); }
	ruleProcedure{ after(grammarAccess.getModelAccess().getProcProcedureParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StatemAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatemStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getModelAccess().getStatemStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ExpAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getExpExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getModelAccess().getExpExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClassTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__NoclassAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getNoclassNoclassKeyword_2_0_0()); }
(
{ before(grammarAccess.getClassTypeAccess().getNoclassNoclassKeyword_2_0_0()); }

	'noclass' 

{ after(grammarAccess.getClassTypeAccess().getNoclassNoclassKeyword_2_0_0()); }
)

{ after(grammarAccess.getClassTypeAccess().getNoclassNoclassKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__PrefixAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getPrefixMultIDParserRuleCall_2_1_1_0()); }
	ruleMultID{ after(grammarAccess.getClassTypeAccess().getPrefixMultIDParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__SuffixAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getSuffixMultIDParserRuleCall_2_2_1_0()); }
	ruleMultID{ after(grammarAccess.getClassTypeAccess().getSuffixMultIDParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__BlockingAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getBlockingAlternatives_2_3_1_0()); }
(rule__ClassType__BlockingAlternatives_2_3_1_0)
{ after(grammarAccess.getClassTypeAccess().getBlockingAlternatives_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProcedureAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__PrefixAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getPrefixMultIDParserRuleCall_2_0_1_0()); }
	ruleMultID{ after(grammarAccess.getProcedureAccess().getPrefixMultIDParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__SuffixAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getSuffixMultIDParserRuleCall_2_1_1_0()); }
	ruleMultID{ after(grammarAccess.getProcedureAccess().getSuffixMultIDParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__TypesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getTypesAlternatives_2_2_1_0()); }
(rule__Procedure__TypesAlternatives_2_2_1_0)
{ after(grammarAccess.getProcedureAccess().getTypesAlternatives_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__RepAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRepIDTerminalRuleCall_2_0_1_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getRepIDTerminalRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__UntilAssignment_2_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getUntilIDTerminalRuleCall_2_0_3_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getUntilIDTerminalRuleCall_2_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__WhileAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhileIDTerminalRuleCall_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getWhileIDTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DoAssignment_2_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDoIDTerminalRuleCall_2_1_3_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getDoIDTerminalRuleCall_2_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ForAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getForIDTerminalRuleCall_2_2_1_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getForIDTerminalRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VarAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVarIDTerminalRuleCall_2_3_1_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getVarIDTerminalRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExAssignment_2_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExIDTerminalRuleCall_2_3_2_1_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getExIDTerminalRuleCall_2_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ValAssignment_2_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getValIDTerminalRuleCall_2_4_1_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getValIDTerminalRuleCall_2_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExAssignment_2_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExIDTerminalRuleCall_2_4_3_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getExIDTerminalRuleCall_2_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__PrefixAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPrefixMultStringParserRuleCall_2_0_1_0()); }
	ruleMultString{ after(grammarAccess.getExpressionAccess().getPrefixMultStringParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Par1Assignment_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar1IDTerminalRuleCall_2_0_2_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getPar1IDTerminalRuleCall_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Par1Assignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar1IDTerminalRuleCall_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getPar1IDTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SuffixAssignment_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSuffixMultStringParserRuleCall_2_1_2_0()); }
	ruleMultString{ after(grammarAccess.getExpressionAccess().getSuffixMultStringParserRuleCall_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Par1Assignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar1IDTerminalRuleCall_2_2_1_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getPar1IDTerminalRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__InfixAssignment_2_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getInfixMultStringParserRuleCall_2_2_2_0()); }
	ruleMultString{ after(grammarAccess.getExpressionAccess().getInfixMultStringParserRuleCall_2_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Par2Assignment_2_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar2IDTerminalRuleCall_2_2_3_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getPar2IDTerminalRuleCall_2_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Par1Assignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar1IDTerminalRuleCall_2_3_1_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getPar1IDTerminalRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__InfixleftAssignment_2_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getInfixleftMultStringParserRuleCall_2_3_2_0()); }
	ruleMultString{ after(grammarAccess.getExpressionAccess().getInfixleftMultStringParserRuleCall_2_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Par2Assignment_2_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getPar2IDTerminalRuleCall_2_3_3_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getPar2IDTerminalRuleCall_2_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LiteralAssignment_2_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLiteralAlternatives_2_4_1_0()); }
(rule__Expression__LiteralAlternatives_2_4_1_0)
{ after(grammarAccess.getExpressionAccess().getLiteralAlternatives_2_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__BracketAssignment_2_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBracketIDTerminalRuleCall_2_5_1_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getBracketIDTerminalRuleCall_2_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__BracesAssignment_2_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBracesIDTerminalRuleCall_2_6_1_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getBracesIDTerminalRuleCall_2_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ParenthasisAssignment_2_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getParenthasisIDTerminalRuleCall_2_7_1_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getParenthasisIDTerminalRuleCall_2_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


