grammar com.euclideanspace.xgener.Gen with org.eclipse.xtext.common.Terminals

generate gen "http://www.euclideanspace.com/xgener/Gen"

Model:
	(clas+=ClassType |proc+=Procedure |statem+=Statement |exp+=Expression)*;
	
ClassType:
	'class' name=ID
    ( noclass+='noclass' 
    | ('prefix' prefix += MultID)
    | ('suffix' suffix += MultID)
    | ('blocking' blocking+=('braces'|'indent'))
    )*;

Procedure:
	'procedure' name=ID
    (('prefix' prefix += MultID)
    | ('suffix' suffix += MultID)
    | ('types' types+=('colonSeperated'|'spaceSeperated'|'inHeader'|'inferred'|'untyped'))
    )*;

Statement:
	'statement' name=ID
    (('repeat' rep=ID 'until' until=ID)
    | ('while' while=ID 'do' do=ID)
    | ('for' for=ID)
    | ('var' var=ID ('=' ex=ID)?)
    | ('val' val=ID '=' ex=ID)
    );

Expression:
	'expression' name=ID
    prec+=Precidence*;

/* make this rule separate from Expression so prefix,suffix,infix.... can be
 * in the same list in any order
 */
Precidence:
	('prefix' rule=ID prefix=MultString par1=ID)
    | ('suffix' rule=ID par1=ID suffix=MultString)
    | ('infix' rule=ID par1=ID infix=MultString par2=ID)
    | ('infixleft' rule=ID par1=ID infixleft=MultString par2=ID)
    | ('literal' rule=ID literal=('int'|'string'|'bool'|'float'))
    | ('bracket' rule=ID bracket=ID)
    | ('braces' rule=ID braces=ID)
    | ('parenthesis' rule=ID parenthesis=ID)
;

MultID: ID | ('[' ID* ']');

MultString: STRING | ('[' STRING* ']');